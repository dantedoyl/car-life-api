basePath: /api/v1
definitions:
  models.CarCard:
    properties:
      avatar_url:
        type: string
      body:
        type: string
      brand:
        type: string
      date:
        type: string
      description:
        type: string
      engine:
        type: string
      horse_power:
        type: string
      id:
        type: integer
      model:
        type: string
      name:
        type: string
      owner_id:
        type: integer
    required:
    - avatar_url
    - body
    - brand
    - date
    - description
    - engine
    - horse_power
    - id
    - model
    - name
    - owner_id
    type: object
  models.CarRequest:
    properties:
      body:
        type: string
      brand:
        type: string
      date:
        type: string
      description:
        type: string
      engine:
        type: string
      horsePower:
        type: string
      model:
        type: string
      name:
        type: string
    type: object
  models.ChatLink:
    properties:
      chat_link:
        type: string
    required:
    - chat_link
    type: object
  models.Club:
    properties:
      avatar:
        type: string
      description:
        type: string
      events_count:
        type: integer
      id:
        type: integer
      name:
        type: string
      owner_id:
        type: integer
      participants_count:
        type: integer
      tags:
        items:
          type: string
        type: array
      user_status:
        type: string
    required:
    - avatar
    - description
    - events_count
    - id
    - name
    - owner_id
    - participants_count
    - tags
    - user_status
    type: object
  models.ClubCard:
    properties:
      avatar:
        type: string
      id:
        type: integer
      name:
        type: string
      participants_count:
        type: integer
      tags:
        items:
          type: string
        type: array
    required:
    - avatar
    - id
    - name
    - participants_count
    - tags
    type: object
  models.CreateClubRequest:
    properties:
      avatar:
        type: string
      description:
        type: string
      name:
        type: string
      tags:
        items:
          type: string
        type: array
    required:
    - avatar
    - description
    - name
    - tags
    type: object
  models.CreateEventRequest:
    properties:
      avatar:
        type: string
      club_id:
        type: integer
      description:
        type: string
      event_date:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      name:
        type: string
    required:
    - avatar
    - club_id
    - description
    - event_date
    - latitude
    - longitude
    - name
    type: object
  models.CreateMiniEventRequest:
    properties:
      description:
        type: string
      ended_at:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      type_id:
        type: integer
    required:
    - description
    - ended_at
    - latitude
    - longitude
    - type_id
    type: object
  models.CreatePostRequest:
    properties:
      text:
        type: string
    required:
    - text
    type: object
  models.Event:
    properties:
      avatar:
        type: string
      club:
        $ref: '#/definitions/models.Club'
      creator_id:
        type: integer
      description:
        type: string
      event_date:
        type: string
      id:
        type: integer
      latitude:
        type: number
      longitude:
        type: number
      name:
        type: string
      participants_count:
        type: integer
      user_status:
        type: string
    required:
    - avatar
    - club
    - creator_id
    - description
    - event_date
    - id
    - latitude
    - longitude
    - name
    - participants_count
    - user_status
    type: object
  models.EventCard:
    properties:
      avatar:
        type: string
      event_date:
        type: string
      id:
        type: integer
      latitude:
        type: number
      longitude:
        type: number
      name:
        type: string
    required:
    - avatar
    - event_date
    - id
    - latitude
    - longitude
    - name
    type: object
  models.EventPost:
    properties:
      attachments:
        items:
          type: string
        type: array
      created_at:
        type: string
      event_id:
        type: integer
      id:
        type: integer
      text:
        type: string
      user:
        $ref: '#/definitions/models.UserCard'
    required:
    - attachments
    - created_at
    - event_id
    - id
    - text
    - user
    type: object
  models.LoginRequest:
    properties:
      vkid:
        type: integer
    type: object
  models.MiniEvent:
    properties:
      created_at:
        type: string
      description:
        type: string
      ended_at:
        type: string
      id:
        type: integer
      latitude:
        type: number
      longitude:
        type: number
      type:
        $ref: '#/definitions/models.MiniEventType'
      user:
        $ref: '#/definitions/models.UserCard'
    required:
    - created_at
    - description
    - ended_at
    - id
    - latitude
    - longitude
    - type
    - user
    type: object
  models.MiniEventType:
    properties:
      id:
        type: integer
      public_description:
        type: string
      public_name:
        type: string
    required:
    - id
    - public_description
    - public_name
    type: object
  models.Session:
    properties:
      expires_at:
        type: string
      user_id:
        type: integer
      value:
        type: string
    required:
    - expires_at
    - user_id
    - value
    type: object
  models.SignUpRequest:
    properties:
      avatarUrl:
        type: string
      description:
        type: string
      garage:
        items:
          $ref: '#/definitions/models.CarRequest'
        type: array
      name:
        type: string
      surname:
        type: string
      tags:
        items:
          type: string
        type: array
      vkid:
        type: integer
    type: object
  models.SignUpResponse:
    properties:
      car_id:
        type: integer
      session:
        $ref: '#/definitions/models.Session'
    required:
    - car_id
    - session
    type: object
  models.Tag:
    properties:
      id:
        type: integer
      name:
        type: string
    required:
    - id
    - name
    type: object
  models.UpdateRequest:
    properties:
      description:
        type: string
      tags:
        items:
          type: string
        type: array
    type: object
  models.User:
    properties:
      avatar_url:
        type: string
      description:
        type: string
      name:
        type: string
      surname:
        type: string
      tags:
        items:
          type: string
        type: array
      vkid:
        type: integer
    required:
    - avatar_url
    - description
    - name
    - surname
    - tags
    - vkid
    type: object
  models.UserCard:
    properties:
      avatar_url:
        type: string
      name:
        type: string
      surname:
        type: string
      vkid:
        type: integer
    required:
    - avatar_url
    - name
    - surname
    - vkid
    type: object
  utils.Error:
    properties:
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for CarLife application
  title: Swagger Example API
  version: "1.0"
paths:
  /club/create:
    post:
      consumes:
      - application/json
      description: Handler for creating a club
      parameters:
      - description: Club
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CreateClubRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Club'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: create a club
      tags:
      - Clubs
  /clubs:
    get:
      consumes:
      - application/json
      description: Handler for getting clubs list
      parameters:
      - description: IdGt
        in: query
        name: IdGt
        type: integer
      - description: IdLte
        in: query
        name: IdLte
        type: integer
      - description: Limit
        in: query
        name: Limit
        type: integer
      - description: Query
        in: query
        name: Query
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ClubCard'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: get clubs list
      tags:
      - Clubs
  /clubs/{cid}/participate/{uid}/{type}:
    post:
      consumes:
      - application/json
      description: Handler for getting tags list
      parameters:
      - description: Club ID
        in: path
        name: cid
        required: true
        type: integer
      - description: User ID
        in: path
        name: uid
        required: true
        type: integer
      - description: Type
        enum:
        - approve
        - reject
        in: path
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "401":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: request participate
      tags:
      - Clubs
  /clubs/{id}:
    get:
      consumes:
      - application/json
      description: Handler for getting a club by id
      parameters:
      - description: Club ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Club'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: get club by id
      tags:
      - Clubs
  /clubs/{id}/{type}:
    get:
      consumes:
      - application/json
      description: Handler for getting tags list
      parameters:
      - description: Club ID
        in: path
        name: id
        required: true
        type: integer
      - description: IdGt
        in: query
        name: IdGt
        type: integer
      - description: IdLte
        in: query
        name: IdLte
        type: integer
      - description: Limit
        in: query
        name: Limit
        type: integer
      - description: Type
        enum:
        - participant
        - participant_request
        - subscriber
        in: path
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.UserCard'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: get clubs users list
      tags:
      - Clubs
    post:
      consumes:
      - application/json
      description: Handler for getting tags list
      parameters:
      - description: Club ID
        in: path
        name: id
        required: true
        type: integer
      - description: Type
        enum:
        - participate
        - subscribe
        in: path
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "401":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: set user role in club
      tags:
      - Clubs
  /clubs/{id}/cars:
    get:
      consumes:
      - application/json
      description: Handler for getting tags list
      parameters:
      - description: Club ID
        in: path
        name: id
        required: true
        type: integer
      - description: IdGt
        in: query
        name: IdGt
        type: integer
      - description: IdLte
        in: query
        name: IdLte
        type: integer
      - description: Limit
        in: query
        name: Limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CarCard'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: get clubs cars list
      tags:
      - Clubs
  /clubs/{id}/chat_link:
    get:
      consumes:
      - application/json
      description: Handler for getting tags list
      parameters:
      - description: Club ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ChatLink'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "401":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: get club chat link
      tags:
      - Clubs
  /clubs/{id}/events:
    get:
      consumes:
      - application/json
      description: Handler for getting tags list
      parameters:
      - description: Club ID
        in: path
        name: id
        required: true
        type: integer
      - description: IdGt
        in: query
        name: IdGt
        type: integer
      - description: IdLte
        in: query
        name: IdLte
        type: integer
      - description: Limit
        in: query
        name: Limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.EventCard'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: get clubs events list
      tags:
      - Clubs
  /clubs/{id}/upload:
    post:
      consumes:
      - multipart/form-data
      description: Handler for uploading a club's avatar
      parameters:
      - description: Club ID
        in: path
        name: id
        required: true
        type: integer
      - description: Image to upload
        in: formData
        name: file-upload
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Club'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: upload avatar for club
      tags:
      - Clubs
  /clubs/tags:
    get:
      consumes:
      - application/json
      description: Handler for getting tags list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Tag'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: get tags list
      tags:
      - Clubs
  /event/create:
    post:
      consumes:
      - application/json
      description: Handler for creating an event
      parameters:
      - description: Event
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CreateEventRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Event'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: create an event
      tags:
      - Events
  /event_posts/{event_id}:
    get:
      consumes:
      - application/json
      description: Handler for getting events posts list
      parameters:
      - description: Event ID
        in: path
        name: event_id
        required: true
        type: integer
      - description: IdGt
        in: query
        name: IdGt
        type: integer
      - description: IdLte
        in: query
        name: IdLte
        type: integer
      - description: Limit
        in: query
        name: Limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.EventPost'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: get events posts list
      tags:
      - EventsPosts
  /event_posts/{event_id}/create:
    post:
      consumes:
      - application/json
      description: Handler for creating an event post
      parameters:
      - description: Event ID
        in: path
        name: event_id
        required: true
        type: integer
      - description: EventPost
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CreatePostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.EventPost'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: create an event post
      tags:
      - EventsPosts
  /events:
    get:
      consumes:
      - application/json
      description: Handler for getting events list
      parameters:
      - description: IdGt
        in: query
        name: IdGt
        type: integer
      - description: IdLte
        in: query
        name: IdLte
        type: integer
      - description: Limit
        in: query
        name: Limit
        type: integer
      - description: Query
        in: query
        name: Query
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.EventCard'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: get events list
      tags:
      - Events
  /events/{eid}/participate/{uid}/{type}:
    post:
      consumes:
      - application/json
      description: Handler for getting tags list
      parameters:
      - description: Event ID
        in: path
        name: eid
        required: true
        type: integer
      - description: User ID
        in: path
        name: uid
        required: true
        type: integer
      - description: Type
        enum:
        - approve
        - reject
        in: path
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "401":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: approve/reject participate in event
      tags:
      - Events
  /events/{id}:
    get:
      consumes:
      - application/json
      description: Handler for creating an event
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Event'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: get event by id
      tags:
      - Events
  /events/{id}/{type}:
    get:
      consumes:
      - application/json
      description: Handler for getting tags list
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      - description: IdGt
        in: query
        name: IdGt
        type: integer
      - description: IdLte
        in: query
        name: IdLte
        type: integer
      - description: Limit
        in: query
        name: Limit
        type: integer
      - description: Type
        enum:
        - participant
        - participant_request
        - spectator
        in: path
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.UserCard'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: get events users list
      tags:
      - Events
    post:
      consumes:
      - application/json
      description: Handler for getting tags list
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      - description: Type
        enum:
        - participate
        - spectate
        in: path
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "401":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: set user role in event
      tags:
      - Events
  /events/{id}/chat_link:
    get:
      consumes:
      - application/json
      description: Handler for getting tags list
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ChatLink'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "401":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: get event chat link
      tags:
      - Events
  /events/{id}/upload:
    post:
      consumes:
      - multipart/form-data
      description: Handler for creating an event
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      - description: Image to upload
        in: formData
        name: file-upload
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Event'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: upload avatar for event
      tags:
      - Events
  /events_posts/{post_id}/upload:
    post:
      consumes:
      - multipart/form-data
      description: Handler for uploading an event post attachment
      parameters:
      - description: Post ID
        in: path
        name: post_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.EventPost'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: upload attachments for event post
      tags:
      - EventsPosts
  /garage/{id}:
    get:
      consumes:
      - application/json
      description: Handler for getting a user by id
      parameters:
      - description: Car ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CarCard'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "401":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: get car
      tags:
      - Users
  /garage/{id}/upload:
    post:
      consumes:
      - multipart/form-data
      description: Handler for creating an event
      parameters:
      - description: Car ID
        in: path
        name: id
        required: true
        type: integer
      - description: Image to upload
        in: formData
        name: file-upload
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: upload avatar for car
      tags:
      - Users
  /login:
    post:
      consumes:
      - application/json
      description: Handler for signing up new user
      parameters:
      - description: User
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Session'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "401":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: login user
      tags:
      - Users
  /me:
    get:
      consumes:
      - application/json
      description: Handler for getting a user by id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: get user by id
      tags:
      - Users
  /me/update:
    put:
      consumes:
      - application/json
      description: Handler for getting a user by id
      parameters:
      - description: User
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.UpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: get user by id
      tags:
      - Users
  /mini_event/create:
    post:
      consumes:
      - application/json
      description: Handler for creating an event
      parameters:
      - description: Event
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CreateMiniEventRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MiniEvent'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: create a mini event
      tags:
      - MiniEvents
  /mini_events:
    get:
      consumes:
      - application/json
      description: Handler for getting events list
      parameters:
      - description: IdGt
        in: query
        name: IdGt
        type: integer
      - description: IdLte
        in: query
        name: IdLte
        type: integer
      - description: Limit
        in: query
        name: Limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.MiniEvent'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: get mini events list
      tags:
      - MiniEvents
  /mini_events/{id}:
    get:
      consumes:
      - application/json
      description: Handler for creating an event
      parameters:
      - description: Mini Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.MiniEvent'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: get mini event by id
      tags:
      - MiniEvents
  /new_car:
    post:
      consumes:
      - application/json
      description: Handler for signing up new user
      parameters:
      - description: Car
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.CarRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CarCard'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "401":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: add new car to user
      tags:
      - Users
  /signup:
    post:
      consumes:
      - application/json
      description: Handler for signing up new user
      parameters:
      - description: User
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/models.SignUpRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.SignUpResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: sign uo new user
      tags:
      - Users
  /user/{id}:
    get:
      consumes:
      - application/json
      description: Handler for getting a user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: get user by id
      tags:
      - Users
  /user/{id}/clubs/{type}:
    get:
      consumes:
      - application/json
      description: Handler for getting a user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: IdGt
        in: query
        name: IdGt
        type: integer
      - description: IdLte
        in: query
        name: IdLte
        type: integer
      - description: Limit
        in: query
        name: Limit
        type: integer
      - description: Type
        enum:
        - admin
        - participant
        - subscriber
        in: path
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ClubCard'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "401":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: get clubs where user is in status
      tags:
      - Users
  /user/{id}/events/{type}:
    get:
      consumes:
      - application/json
      description: Handler for getting a user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: IdGt
        in: query
        name: IdGt
        type: integer
      - description: IdLte
        in: query
        name: IdLte
        type: integer
      - description: Limit
        in: query
        name: Limit
        type: integer
      - description: Type
        enum:
        - admin
        - participant
        - spectator
        in: path
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.EventCard'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "401":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: get events where user is in status
      tags:
      - Users
  /user/{id}/garage:
    get:
      consumes:
      - application/json
      description: Handler for getting a user by id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: IdGt
        in: query
        name: IdGt
        type: integer
      - description: IdLte
        in: query
        name: IdLte
        type: integer
      - description: Limit
        in: query
        name: Limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CarCard'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "401":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: get user garage
      tags:
      - Users
  /user/own_clubs:
    get:
      consumes:
      - application/json
      description: Handler for getting a user by id
      parameters:
      - description: IdGt
        in: query
        name: IdGt
        type: integer
      - description: IdLte
        in: query
        name: IdLte
        type: integer
      - description: Limit
        in: query
        name: Limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ClubCard'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.Error'
        "401":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.Error'
      summary: get clubs where user is owner
      tags:
      - Users
swagger: "2.0"
